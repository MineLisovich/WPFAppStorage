// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpfAppStorage.Models;

namespace WpfAppStorage.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WpfAppStorage.Models.Entities.Applicances", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CountApplicances")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Providerid")
                        .HasColumnType("int");

                    b.Property<int>("SectionsStorageid")
                        .HasColumnType("int");

                    b.Property<int>("TypeAplicancesid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Providerid");

                    b.HasIndex("SectionsStorageid");

                    b.HasIndex("TypeAplicancesid");

                    b.ToTable("Applicances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddDate = new DateTime(2023, 3, 28, 10, 15, 41, 535, DateTimeKind.Local).AddTicks(2042),
                            CountApplicances = 133,
                            Name = "Stiralca",
                            Price = 20m,
                            Providerid = 1,
                            SectionsStorageid = 1,
                            TypeAplicancesid = 1
                        });
                });

            modelBuilder.Entity("WpfAppStorage.Models.Entities.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberHouse")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Minsk",
                            Country = "Belarus",
                            NameCompany = "Company the beast",
                            NumberHouse = 23,
                            PhoneNumber = "+375299360451",
                            Street = "Limonnaya"
                        });
                });

            modelBuilder.Entity("WpfAppStorage.Models.Entities.SectionsStorage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameSections")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SectionsStorage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameSections = "Section A"
                        });
                });

            modelBuilder.Entity("WpfAppStorage.Models.Entities.TypeApplicances", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeApplicances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameType = "Пылесос"
                        });
                });

            modelBuilder.Entity("WpfAppStorage.Models.Entities.Applicances", b =>
                {
                    b.HasOne("WpfAppStorage.Models.Entities.Provider", "Provider")
                        .WithMany("_ApplicancesList")
                        .HasForeignKey("Providerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WpfAppStorage.Models.Entities.SectionsStorage", "SectionsStorage")
                        .WithMany("_ApplicancesList")
                        .HasForeignKey("SectionsStorageid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WpfAppStorage.Models.Entities.TypeApplicances", "TypeAplicances")
                        .WithMany("_ApplicancesList")
                        .HasForeignKey("TypeAplicancesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
